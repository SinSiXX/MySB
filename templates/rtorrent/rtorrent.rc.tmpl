# rev 0.6
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################
## RAKSHASA
# https://github.com/rakshasa/rtorrent/wiki/rTorrent-0.9-Comprehensive-Command-list-(WIP)#system
# https://raw.githubusercontent.com/wiki/rakshasa/rtorrent/CONFIG-Template.md
# https://github.com/rakshasa/rtorrent/wiki/Common-Tasks-in-rTorrent#move-completed-torrents-to-a-fixed-location
# https://github.com/rakshasa/rtorrent/wiki/TORRENT-Watch-directories
# https://github.com/rakshasa/rtorrent/wiki/Performance-Tuning
# https://github.com/rakshasa/rtorrent/wiki/IP-filtering
# https://github.com/rakshasa/rtorrent/wiki/COMMAND-Execute
# https://github.com/rakshasa/rtorrent/wiki/RPC-Setup-XMLRPC
#
#
# Conditions examples: https://github.com/skangas/dot-rtorrent/blob/master/.rtorrent.rc#L134
# Script XMLRPC: https://github.com/rakshasa/rtorrent/wiki/RPC-Utility-XMLRPC2SCGI
# https://wiki.archlinux.org/index.php/RTorrent
# http://www.krank.se/2014/06/25/rtorrent-magic-moving-finished-torrents-based-on-labels/
# https://whatbox.ca/wiki/editing_rtorrentrc
# https://github.com/cjlucas/rtorrent-python/wiki/rTorrent-XMLRPC-Reference
# https://mondedie.fr/d/5920-Doc-Executer-des-commandes-avec-les-evenements-rTorrent
# https://calomel.org/rtorrent_mods.html

######################################################################

####################
#### Network
####################

## Bind listening socket and outgoing connections to this network interface address.
network.bind_address.set = <local_address>

## Set the address reported to the tracker.
network.local_address.set = <local_address>

## Try to open a listening port in the range a up to and including b.
network.port_range.set = <port_range>

## Open the listening port at a random position in the port range.
network.port_random.set = 0

## Use a http proxy. Use an empty string to disable.
network.http.proxy_address.set =

## Set the certificates to use in http requests.
## See Curl's CURLOPT_CAPATH and CURLOPT_CAINFO options for further information.
network.http.capath.set = /etc/ssl/certs
#network.http.cacert.set = <InstallDir>/ssl/mysb.cert
## It seems to me "set network.http.ssl_verify_peer.set=0 " would open the door for man-in-the-middle attacks ??
network.http.ssl_verify_peer.set = 1
network.http.ssl_verify_host.set = 1

## Adjust the send and receive buffer size for socket.
#network.send_buffer.size.set = 1M
#network.receive_buffer.size.set = 131072

#### Limits for file handle resources, this is optimized for
#### an `ulimit` of 1024 (a common default). You MUST leave
#### a ceiling of handles reserved for rTorrent's internal needs!
## Number of sockets to simultaneously keep open.
## This value is set to 32 by default.
## Maximum number of simultaneous HTTP request (used by announce or scrape requests) Default: `32` (`set_max_open_http`)
#network.http.max_open.set = 32
## Number of files to simultaneously keep open.
## LibTorrent dynamically opens and closes files as necessary when mapping files to memory.
## Default is based on sysconf(_SC_OPEN_MAX).
## You probably only think you know what this option does, so don't touch it.
#network.max_open_files.set = 600
#network.max_open_sockets.set = 300

## XMLRPC
network.xmlrpc.size_limit.set = 4M

## SCGI
network.scgi.open_port = 127.0.0.1:<scgi_port>
#network.scgi.dont_route.set =

## HTTP
network.http.dns_cache_timeout.set = 30

####################
#### System
####################

## Whether to allocate disk space for a new torrent. Default: `0`
system.file.allocate.set = 1

## Set the maximum size a file can have. Disable by passing -1.
system.file.max_size.set = -1

## Split files in a torrent larger than size into seperate files. Disable by passing -1.
system.file.split_size.set = -1

## Set the suffix used on split files. Defaults to .part.
#system.file.split_suffix.set = .part

## Set the umask for this process, which is applied to all files created by the program.
# r (read) = 4
# w (write) = 2
# x (execute) = 1
# - = 0
# system.umask.set = 0027
# system.umask.set = 0017

## Changes the working directory of the process using chdir.
#system.cwd.set = (directory.default)
system.cwd.set = <homedir>/rtorrent

####################
#### Memory/Pieces
####################

## Perform hash check on torrents that have finished downloading.
## Check hash for finished torrents. Might be useful until the bug is fixed that causes lack of diskspace not to be properly reported.
pieces.hash.on_completion.set = 0

## Set the max amount of memory space used to mapping file chunks.
## This may also be set using ulimit -m where 3/4 will be allocated to file chunks.
## # nb does not refer to physical memory
pieces.memory.max.set = 3500M

## Always use MS_SYNC rather than MS_ASYNC when syncing chunks.
## This may be nessesary in case of filesystem bugs like NFS in linux ~2.6.13.
#pieces.sync.always_safe.set = 0

# preload type 0 = Off, 1 = madvise, 2 = direct paging
#pieces.preload.type.set = 1
#pieces.preload.min_size.set = 262144
#pieces.preload.min_rate.set = 5120
#pieces.sync.timeout.set = 600
#pieces.sync.timeout_safe.set = 900


####################
#### Directory
####################

## Set the default download directory. Defaults to "./".
directory.default.set = ~/rtorrent/complete


####################
#### Session
####################

## Session management will be enabled and the torrent files for all open downloads will be stored in this directory.
## Only one instance of rtorrent should be used with each session directory, though at the moment no locking is done.
## An empty string will disable the session directory.
session.path.set = ~/rtorrent/.session

## Controls if the session torrent is saved when a torrent finishes. By default on.
session.on_completion.set = 1

## Controls if a lock file is created in the session directory on startup.
session.use_lock.set = 1


####################
#### Tracker
####################

## Set to no to disable all tracker requests. Useful for disabling rtorrent with the schedule command.
trackers.enable = 1

# Set the numwant field sent to the tracker, which indicates how many peers we want. A negative value disables this feature. Default: `-1` (`tracker_numwant`)
trackers.numwant.set = -1

## Use UDP trackers.
## Disable if you are behind a firewall, etc, that does not allow connections to UDP trackers.
trackers.use_udp.set = 0


####################
#### Misc
####################

## Add a preferred filename encoding to the list.
## The encodings are attempted in the order they are inserted, if none match the torrent default is used.
encoding.add = utf8

## Change the key-bindings.
## qwerty|azerty|qwertz|dvorak
#keys.layout.set = azerty


####################
#### Protocol
####################

## Set how rtorrent should deal with encrypted Bittorrent connections.
## By default, encryption is disabled, equivalent to specifying the option none.
## Alternatively, any number of the following options may be specified:
##		allow_incoming (allow incoming encrypted connections),
##		try_outgoing (use encryption for outgoing connections),
##		require (disable unencrypted handshakes),
##		require_RC4 (also disable plaintext transmission after the initial encrypted handshake),
##		enable_retry (if the initial outgoing connection fails, retry with encryption turned on if it was off or off if it was on),
##		prefer_plaintext (choose plaintext when peer offers a choice between plaintext transmission and RC4 encryption, otherwise RC4 will be used).
#
# Enforce encryption
protocol.encryption.set = require,require_RC4,allow_incoming,try_outgoing,enable_retry,prefer_plaintext
# Allow encryption
#protocol.encryption.set = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Enable peer exchange (for torrents not marked private)
protocol.pex.set = 0


####################
#### Method
####################

## Some additional values and commands
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple, "if=(d.is_multi_file),(cat, (d.directory), /),(cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(~/rtorrent/.session), (d.hash), .torrent"

# When a torrent is added, it executes ".rTorrent_inserted_new.sh".
method.set_key = event.download.inserted_new,on_inserted_new0,"execute2={bash,~/.rTorrent_inserted_new.sh,$d.hash=,$d.name=,$d.directory=,$d.loaded_file=,$d.custom2=,$d.custom1=}"
# When the torrent is finished, it executes ".rTorrent_finished.sh".
method.set_key = event.download.finished,on_finished0,"execute2={bash,~/.rTorrent_finished.sh,$d.hash=,$d.base_path=,$d.directory=,$d.name=,$d.loaded_file=,$d.custom1=,$d.custom2=}"
# When a torrent is erased, it executes ".rTorrent_erased.sh".
method.set_key = event.download.erased,on_erase0,"execute2={bash,~/.rTorrent_erased.sh,$d.hash=,$d.name=,$d.directory=}"

# Include split config files from '~/rtorrent/config.d'
# https://rtorrent-docs.readthedocs.io/en/latest/use-cases.html#drop-in-config
#execute.nothrow = bash, -c, (cat,\
#    "find ~/rtorrent/config.d/ -name '*.rc' ",\
#    "| sort | sed -re 's/^/import=/' > ~/rtorrent/config.d/.import")
#try_import = "~/rtorrent/config.d/.import")

####################
#### DHT
####################

# Enable DHT support for trackerless torrents or when all trackers are down
# may be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately)
# the default is "off". for DHT to work, a session directory must be defined
dht.mode.set = disable

# UDP port to use for DHT.
#dht.port.set = 6881


####################
#### Scheduling
####################

## Call command every interval seconds, starting from start.
## An interval of zero calls the task once, while a start of zero calls it immediately.
## Currently command is forwarded to the option handler.
## Start and interval may optionally use a time format, dd:hh:mm:ss.
## F.ex to start a task every day at 18:00, use 18:00:00,24:00:00.
## schedule2 = id,start,interval,command
## commands: stop_untied =, close_untied =, remove_untied =
## stop, close or remove the torrents that are tied to filenames that have been deleted.
#
## Watch a directory for new torrents, and stop those that have been deleted
schedule2 = watch_directory,5,5,"load.normal=~/rtorrent/watch/*.torrent,d.directory.set=~/rtorrent/complete/,d.custom1.set=,d.custom2.set=~/rtorrent/torrents/"
## Close torrents when diskspace is low.
schedule2 = low_diskspace,5,60,close_low_diskspace=100M
## Periodically save session data
#schedule2 = session_save, 1200, 3600, ((session.save))
schedule2 = session_save,240,300,session_save=~/rtorrent/.session


####################
#### Throttle
####################

## Global upload and download rate in KiB, `0` for unlimited (`download_rate`, `upload_rate`)
throttle.global_up.max_rate.set_kb = 0
throttle.global_down.max_rate.set_kb = 0

## Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`) Disable by setting 0.
throttle.max_uploads.global.set = 0
throttle.max_downloads.global.set = 0

## Maximum and minimum number of peers to connect to per torrent while downloading (`min_peers`, `max_peers`) Default: `100` and `200` respectively
throttle.min_peers.normal.set = 1
throttle.max_peers.normal.set = 100

## Same as above but for seeding completed torrents (seeds per torrent), `-1` for same as downloading (`min_peers_seed`, `max_peers_seed`) Default: `-1` for both
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

## Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` for both
throttle.max_downloads.set = 50
throttle.max_uploads.set = 50

## Change the divider used to calculate the max upload and download slots to use when the throttle is changed. Disable by setting 0.
throttle.max_uploads.div.set = 0
throttle.max_downloads.div.set = 0


####################
#### Ratio
####################

# Enable the default ratio group.
#group.seeding.ratio.enable =

# Change the limits, the defaults should be sufficient.
# Upload to a minimum ratio of 2.0
#group2.seeding.ratio.min.set=200

# Upload to a maximum ratio of 4.0
#group2.seeding.ratio.max.set = 400

# Upload a minimum of 250 MB
#group2.seeding.ratio.upload.set = 250M


####################
#### BlockList
####################

# BlockList (see '~/blocklist/BlocklistsRTorrent.bsh')
#ipv4_filter.load="~/blocklist/blocklist_rtorrent.txt",unwanted
#ipv4_filter.size_data=
#schedule2=load_filter,0,24:00:00,"ipv4_filter.load=~/blocklist/blocklist_rtorrent.txt,unwanted"
#print = "IPv4 filter list size data:",(to_kb,(ipv4_filter.size_data))," kb."


####################
#### Execution
####################

# Init ruTorrent Plugins
execute2 = {sh,-c,/usr/bin/php <InstallDir>/web/apps/ru/php/initplugins.php <username> &}

################ Log section
#
# https://github.com/rakshasa/rtorrent/wiki/LOG-Logging
#
# LEVELS logging
#	critical
#	error
#	warn
#	notice
#	info
#	debug
#
log.execute = "~/logs/execute.log"
log.xmlrpc = "~/logs/xmlrpc.log"

log.open_file = "rtorrent", "~/logs/rtorrent.log"
log.add_output = "info", "rtorrent"
log.open_file = "tracker", "~/logs/tracker.log"
log.add_output = "tracker_info", "tracker"
#log.add_output = "tracker_debug", "tracker.log"
log.open_file = "storage", "~/logs/storage.log"
log.add_output = "storage_info", "storage"
log.open_file = "peer", "~/logs/peer.log"
log.add_output = "peer_info", "peer"
log.open_file = "thread", "~/logs/thread.log"
log.add_output = "thread_info", "thread"
log.open_file = "torrent", "~/logs/torrent.log"
log.add_output = "torrent_info", "torrent"
